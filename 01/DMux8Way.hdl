// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/DMux8Way.hdl

/**
 * 8-way demultiplexor:
 * {a, b, c, d, e, f, g, h} = {in, 0, 0, 0, 0, 0, 0, 0} if sel == 000
 *                            {0, in, 0, 0, 0, 0, 0, 0} if sel == 001
 *                            etc.
 *                            {0, 0, 0, 0, 0, 0, 0, in} if sel == 111
 */

CHIP DMux8Way {
    IN in, sel[3];
    OUT a, b, c, d, e, f, g, h;

    PARTS:
    Not(in=sel[0], out=selxx0);
    Not(in=sel[1], out=selx0x);
    Not(in=sel[2], out=sel0xx);

    And(a=sel0xx, b=selx0x, out=sel00x);
    And(a=sel0xx, b=sel[1], out=sel01x);
    And(a=sel[2], b=selx0x, out=sel10x);
    And(a=sel[2], b=sel[1], out=sel11x);

    And(a=sel00x, b=selxx0, out=sel000);
    And(a=sel00x, b=sel[0], out=sel001);
    And(a=sel01x, b=selxx0, out=sel010);
    And(a=sel01x, b=sel[0], out=sel011);
    And(a=sel10x, b=selxx0, out=sel100);
    And(a=sel10x, b=sel[0], out=sel101);
    And(a=sel11x, b=selxx0, out=sel110);
    And(a=sel11x, b=sel[0], out=sel111);

    And(a=in, b=sel000, out=a);
    And(a=in, b=sel001, out=b);
    And(a=in, b=sel010, out=c);
    And(a=in, b=sel011, out=d);
    And(a=in, b=sel100, out=e);
    And(a=in, b=sel101, out=f);
    And(a=in, b=sel110, out=g);
    And(a=in, b=sel111, out=h);
}
